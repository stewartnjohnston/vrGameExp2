@startuml

title __ENGINE's Class Diagram__\n

  package net.pogo.game.engine {
    class DisplayComponent {
        + textureMesh : String
        + textureMeshObject : Object
        + texture : String
        + textureObject : Object
    }
  }
  

  package net.pogo.game.engine {
    class Engine {
        - entities : List<Entity>
        + Engine()
        + addEntity()
        + removeEntity()
        + GetSystemManager()
        + addALLSystems()
        + GetrenderSystem()
        + GetTextureContainer()
        + GetTexturedMeshContainer()
    }
  }
  

  package net.pogo.game.engine {
    class Entity {
        + id : int
        {static} ~ idGeneration : int
        - components : List<Object>
        + Entity()
        + add()
        + remove()
        + hasComponentType()
        + getComponentType()
    }
  }
  

  package net.pogo.game.engine {
    abstract class GraphicsDisplay {
        {abstract} + draw()
    }
  }
  

  package net.pogo.game.engine {
    class MoveNode {
    }
  }
  

  package net.pogo.game.engine {
    class MoveSystem {
        - targets : Map<Integer, MoveNode>
        ~ addEntity()
        ~ removeEntity()
        + draw()
        + update()
    }
  }
  

  package net.pogo.game.engine {
    class Node {
        + entityID : int
    }
  }
  

  package net.pogo.game.engine {
    class PositionComponent {
    }
  }
  

  package net.pogo.game.engine {
    class RenderNode {
    }
  }
  

  package net.pogo.game.engine {
    class RenderSystem {
        - targets : Map<Integer, RenderNode>
        + view : float[]
        + perspective : float[]
        ~ addEntity()
        ~ removeEntity()
        + update()
        + draw()
    }
  }
  

  package net.pogo.game.engine {
    abstract class System {
        - running : boolean
        {abstract} ~ update()
        {abstract} ~ draw()
        {abstract} ~ addEntity()
        {abstract} ~ removeEntity()
        + start()
        + stop()
        + isRunning()
    }
  }
  

  package net.pogo.game.engine {
    class SystemManager {
        - PrioritisedList : List<System>
        + addSystem()
        {static} + test()
        + update()
        + removeSystem()
        + addEntity()
        + removeEntity()
    }
  }
  

  package net.pogo.game.engine {
    class TextureContainer {
        {static} - logger : Logger
        - textures : Map<String, Texture>
        ~ context : Context
        + loadTexture()
        + loadTexture()
        + containsKey()
        + getTexture()
    }
  }
  

  package net.pogo.game.engine {
    class TexturedMeshContainer {
        {static} - logger : Logger
        - texturedMeshs : Map<String, TexturedMesh>
        ~ context : Context
        - objectPositionParam : int
        - objectUvParam : int
        + loadWaveFrontObject()
        + loadWaveFrontObject()
        + containsKey()
        + getTexturedMesh()
        + deleteWaveFrontObject()
    }
  }
  

  package net.pogo.game.engine {
    class VelocityComponent {
    }
  }
  

  Engine o-- SystemManager : systemManager
  Engine o-- TextureContainer : textureContainer
  Engine o-- TexturedMeshContainer : texturedMeshContainer
  Engine o-- RenderSystem : renderSystem
  GraphicsDisplay o-- TextureContainer : textureContainer
  GraphicsDisplay o-- TexturedMeshContainer : texturedMeshContainer
  MoveNode -up-|> Node
  MoveNode o-- PositionComponent : position
  MoveNode o-- VelocityComponent : velocity
  MoveSystem -up-|> System
  PositionComponent o-- Transform : position
  RenderNode o-- DisplayComponent : display
  RenderNode o-- PositionComponent : position
  RenderSystem -up-|> System
  RenderSystem o-- GraphicsDisplay : display
  VelocityComponent o-- Vector3 : velocity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
